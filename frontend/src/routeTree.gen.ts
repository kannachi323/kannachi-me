/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MenuImport } from './routes/menu'
import { Route as IndexImport } from './routes/index'
import { Route as MenuSocialImport } from './routes/menu.social'
import { Route as MenuSkillsImport } from './routes/menu.skills'
import { Route as MenuResumeImport } from './routes/menu.resume'

// Create/Update Routes

const MenuRoute = MenuImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MenuSocialRoute = MenuSocialImport.update({
  id: '/social',
  path: '/social',
  getParentRoute: () => MenuRoute,
} as any)

const MenuSkillsRoute = MenuSkillsImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => MenuRoute,
} as any)

const MenuResumeRoute = MenuResumeImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => MenuRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/menu/resume': {
      id: '/menu/resume'
      path: '/resume'
      fullPath: '/menu/resume'
      preLoaderRoute: typeof MenuResumeImport
      parentRoute: typeof MenuImport
    }
    '/menu/skills': {
      id: '/menu/skills'
      path: '/skills'
      fullPath: '/menu/skills'
      preLoaderRoute: typeof MenuSkillsImport
      parentRoute: typeof MenuImport
    }
    '/menu/social': {
      id: '/menu/social'
      path: '/social'
      fullPath: '/menu/social'
      preLoaderRoute: typeof MenuSocialImport
      parentRoute: typeof MenuImport
    }
  }
}

// Create and export the route tree

interface MenuRouteChildren {
  MenuResumeRoute: typeof MenuResumeRoute
  MenuSkillsRoute: typeof MenuSkillsRoute
  MenuSocialRoute: typeof MenuSocialRoute
}

const MenuRouteChildren: MenuRouteChildren = {
  MenuResumeRoute: MenuResumeRoute,
  MenuSkillsRoute: MenuSkillsRoute,
  MenuSocialRoute: MenuSocialRoute,
}

const MenuRouteWithChildren = MenuRoute._addFileChildren(MenuRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/menu': typeof MenuRouteWithChildren
  '/menu/resume': typeof MenuResumeRoute
  '/menu/skills': typeof MenuSkillsRoute
  '/menu/social': typeof MenuSocialRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/menu': typeof MenuRouteWithChildren
  '/menu/resume': typeof MenuResumeRoute
  '/menu/skills': typeof MenuSkillsRoute
  '/menu/social': typeof MenuSocialRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/menu': typeof MenuRouteWithChildren
  '/menu/resume': typeof MenuResumeRoute
  '/menu/skills': typeof MenuSkillsRoute
  '/menu/social': typeof MenuSocialRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/menu' | '/menu/resume' | '/menu/skills' | '/menu/social'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/menu' | '/menu/resume' | '/menu/skills' | '/menu/social'
  id:
    | '__root__'
    | '/'
    | '/menu'
    | '/menu/resume'
    | '/menu/skills'
    | '/menu/social'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MenuRoute: typeof MenuRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MenuRoute: MenuRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/menu"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/menu": {
      "filePath": "menu.tsx",
      "children": [
        "/menu/resume",
        "/menu/skills",
        "/menu/social"
      ]
    },
    "/menu/resume": {
      "filePath": "menu.resume.tsx",
      "parent": "/menu"
    },
    "/menu/skills": {
      "filePath": "menu.skills.tsx",
      "parent": "/menu"
    },
    "/menu/social": {
      "filePath": "menu.social.tsx",
      "parent": "/menu"
    }
  }
}
ROUTE_MANIFEST_END */
